from functools import cached_property

from eu4.paths import eu4outpath

try:
    # when used by PyHelpersForPDXWikis
    from PyHelpersForPDXWikis.localsettings import EU4DIR
except: # when used by ck2utils
    from localpaths import eu4dir
    EU4DIR = eu4dir
from common.paradox_lib import Game
from common.file_generator import FileGenerator


class EuropaUniversalisIV(Game):
    """Never construct this object manually. Use the variable eu4game instead.
    This way all data can be cached without having to pass on references to the game or the parser"""
    name = 'Europa Universalis IV'
    short_game_name = 'eu4'
    game_path = EU4DIR
    launcher_settings = game_path / 'launcher-settings.json'
    wiki_domain = 'eu4.paradoxwikis.com'

    @cached_property
    def parser(self) -> 'Eu4Parser':
        """returns the shared Eu4Parser"""

        # the import has to be inside this method to allow indirect circular dependencies if an entity which is
        # generated by the parser needs to call a method from the parser
        from eu4.parser import Eu4Parser
        return Eu4Parser()


eu4game = EuropaUniversalisIV()


class Eu4FileGenerator(FileGenerator):

    parser: 'Eu4Parser'

    def __init__(self):
        super().__init__(eu4game)
        self.outpath = eu4outpath
        if not self.outpath.exists():
            self.outpath.mkdir(parents=True)

